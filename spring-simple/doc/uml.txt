# UML

uml 이란?
	==> Unified Modeling Language 의 약자
		표준화된 범용 모델링 언어의 하나...
		
		우리가 만들 프로그램을 도식적(그래픽화)으로 표현하여
		좀더 빨리 전체 흐름을 이해할 수 있도록 도와주는 것.
		
UML의 종류
	1. Usecase Diagram
		==> 사용자 입장에서 필요한 기능을 도식적으로 표현해 놓은 것.
		
		그리는 방법]
			1) 액터
				==> 해당 프로그램을 사용하는 사용자를 도식적으로 만든것
					프로그램을 사용하는 사용자의 종류를 될 수 있으면 정확하게 표현해야 한다.
					
					==> 
					액터를 보면 만들어야 하는 프로그램의 권한이나,
					프로그램의 종류를 분석할 수 있어야 한다.
				
			2) 유스케이스
				==> 사용할 수 있는 기능을 도식적으로 만드는 것
					
					가능하면 자세하게 기능을 풀어서 표현해야 한다.
			
			3) 일반화 작업
				==> 순차적으로 처리하는 것
					
					예]
						게시판 목록보기와 게시판 상세보기는
						목록보기의 다음 순서로 상세보기가 된다.
						
			4) include 작업
				==> 특정 작업을 실행할 때 반드시 포함 되어야 할 작업을 표시하는 것
					
					예]
						회원가입의 경우 반드시 아이디 중복 검사를 거쳐하는 하는 경우에
						아이디 중복 검사 기능은 회원 가입의 include 기능으로 만든다.
						
					주의사항]
						화살표 방향은 메인에서 보조기능으로 나가는 방향이 되어야 한다.
			
			5) extends 작업
				==> 특정 작업이 진행되는 되는 도중에 다른작업이 선택적으로 확장되어짐을 표시하는 것.
					
					주의]
						화살표 방향은 선택 요소에서 메인 요소로 나가는 방향이 되어야 한다.
						
						
참고]
	UseCase 는 도식적으로 사용자가 사용할 수 있는 기능에 대해서 나열한 것이다.
	이것만 가지고는 개발자 입장에서 프로그램을 어떻게 만들어야 하는지 구체적인 목적을 알 수가 없다.
	
	예]
		로그인 기능은 언제/ 어떻게 실행해야 하며
		id, pw 는 어떤 정규화 과정을 거쳐야 하는지...
		로그인에 성공/실패한 경우 어떻게 처리해야 하는지에
		대해서는 구체적으로 알 수가 없다.
		
		따라서
		UseCase 는 반드시 UseCase 명세서를 같이 만들어 주어야 한다.
		
UseCase 명세서 만드는 방법
	
	==> 이것은 하나의 외부 문서로 무엇으로 어떻게 만들던지 상관이 없다.
		(즉, 특정하게 문서의 규칙이 있는 것은 아니다.)
		하지만 다음 내용이 포함 되도록 권장하고 있다.
		
	1. 유스케이스 제목
		==> 현재 유스케이스의 제목을 의미
			(유스케이스 전체가 아닌 하나의 유스케이스)
			
	2. 개요
		==> 유스케이스의 전체적인 기능 설명을 의미
		
	3. 관련액터
		==> 해당 유스케이스를 사용하는 사용자 종류(액터종류)를 의미
		
	4. 기본 흐름
		==> 가장 기본적인 작업의 흐름을 명시하는 것을 말한다.
		
	5. 대체 흐름
		==> 기본 흐름에 문제가 생긴 경우 
			보조적으로 처리할 작업의 흐름을 명시하는 것
			(정상적으로 작업하기 위한 보조 흐름)
			
	6. 예외 흐름
		==> 기본 흐름에 문제가 생긴 경우
			보조적으로 처리할 작업의 흐름을 명시하는 것
			(정상적인 작업이 진행되지 못할 경우 처리할 보조흐흠)
		
	7. 확장점
		==> 해당 기능을 수행하지 못할 경우를 대비해서
			대신 처리할 기능을 나열해 주는 것을 의미한다.
			
	8. 특이사항
		==> 특이사항이 필요한 경우 설명하는 것..
	
-----------------------------------------------------------------
과제 ]
	공지사항 기능에 대한 UseCase를 그려본다.
	
	필요한 기능
		목록보기
		상세보기
		공지사항 등록
		공지사항 수정
		공지사항 삭제
		
		목록보기에서 상세보기가 같이 진행되도록 한다.
		(슬라이더 기능을 이용해서 보였다 감췄다를 할 수 있게 한다.)
		
		공지사항 등록, 수정, 삭제 는 오직 관리자만 할 수 있게 한다.
		
		목록보기와 상세보기는 사용자와 관리자 모두 할 수 있게 한다.
------------------------------------------------------------------

	2. Class Diagram
	3. Sequence Diagram
	4. Collaboration Diagram
	5. Statechart Diagram
	6. Activity Diagram
	7. Deployment Diagram
	8. Component Diagram
	